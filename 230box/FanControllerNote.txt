
 * Created by c2mismo 19/07/19
 * Released into the public domain.


Control de regulación de temperadura.
·····································

Pensamos que no vamos a implementar control PID.

1- Falta de tiempo
2- Quizas los resultados no llegen a ser demasiado beneficiosos, en relación con la siguiente solucion.

Utilizar rango de temperatura de 45ºC ~ 70ºC apagado en 40ºC
El ventilador funcionara entre ese rango de 0% ~ 100% de su potencia

En nuestro caso es completamente factible, no creo que los ventiladores puedan
enfriar completamente el sistema, hay que ver la reacción.

Es mas creo que en nuestro caso un PID no tiene por que ser la mejor solución
puesto que no quiero mantener una temperatura.

En un futuro interesa estudiar mas a fondo.

Mejoras a corto plazo.

1- Entre los rangos de temperatura de 45ºC ~ 50ºC. Solo un ventilador de forma alternada.


****************************************************************
****************************************************************

Mejoras a largo plazo.

1- PID-v1 https://github.com/br3ttb/Arduino-PID-Library MIT

double Setpoint, Input, Output;
double Kp=2, Ki=5, Kd=1;

PID myPID (&Input, &Output, &Setpoint, Kp, Pi, Kd, P_On_M, DIRECT)

P_On_M para que se adapte si esta mas del setpoint (no hace falta)

DIRECT en nuestro caso pienso que mejor REVERSE
error=Setpint-Input (55º - 50º=5º) (55º - 60º=-5º) hay que probar

myPID.SetSampleTime() default is (100) 0.1 seconds at SETUP

my.PID.SetOutputLimits(0, 255) config PWM limts (0, 100) at SETUP

myPID.SetControlerDirection(DIRECT ~ REVERSE)

myPID.SetMode(MANUAL ~ AUTOMATIC) 	default AUTOMATIC
	en modo MANUAL uno puede actuar sobre el motor pero el PID sigue recogiendo datos
	de forma que cuando volvamos a modo AUTOMATIC el motor no reaccione de forma brusca

myPID.SetTunig(newKp, newKi, newKd, POn) modifica estos valores (POn opcional)




